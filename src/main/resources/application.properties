server.port=8080
server.servlet.context-path=/mp-mirakl-orch

## GCP project Configurations
spring.cloud.gcp.project-id=mtech-merch-epc-poc-317014

## PubSub Topic & Sub configurations
## Below are PUB/SUBs on Orchestration Layer (OL)
com.macys.mp.pubsub.product.create.update.request.sub=M.MER.EPC.MIRAKL.TRANSFER.SUB
com.macys.mp.pubsub.offer.request.sub=M.MER.EPC.MIRAKL.PRODUCT.OFFER.CLOUDORCH.SUB
com.macys.mp.pubsub.create.response.sub=M.MER.EPC.MIRAKL.CREATE.RESPONSE.SUB
com.macys.mp.pubsub.product.response.staging.sub=M.MER.EPC.MIRAKL.PRODUCT.RESPONSE.STAGING.SUB
com.macys.mp.pubsub.image.response.sub=M.MER.EPC.MIRAKL.IMAGE.RESPONSE.SUB
com.macys.mp.pubsub.product.update.staging.sub=M.MER.EPC.MIRAKL.PRODUCT.STAGING.ONPERM.ORCH.SUB
com.macys.mp.pubsub.product.image.staging.sub=M.MER.EPC.MIRAKL.PRODUCT.IMAGE.STAGING.SUB
com.macys.mp.pubsub.product.update.ol.onprem.pub=M.MER.EPC.MIRAKL.PRODUCT.UPDATE.OL.ONPREM.PUB
com.macys.mp.pubsub.product.image.ol.onprem.pub=M.MER.EPC.MIRAKL.PRODUCT.IMAGE.OL.ONPREM.PUB

## Below are PUB/SUBs on Integration Layer (IL)
com.macys.mp.pubsub.product.update.response.sub=projects/mtech-merch-epc-poc-317014/subscriptions/M.MER.EPC.MIRAKL.PRODUCT.RESPONSE.SUB
com.macys.mp.pubsub.offer.response.sub=projects/mtech-merch-epc-poc-317014/subscriptions/M.MER.EPC.MIRAKL.PRODUCT.OFFER.RESPONSE.CLOUDORCH.SUB
com.macys.mp.pubsub.create.response.mcom.il.pub=projects/mtech-merch-epc-poc-317014/topics/M.MER.EPC.MIRAKL.CREATE.RESPONSE.CLOUDORCH.PUB
com.macys.mp.pubsub.create.response.bcom.il.pub=projects/mtech-merch-epc-poc-317014/topics/M.MER.EPC.MIRAKL.CREATE.RESPONSE.CLOUDORCH.PUB

## CloudSQL Configuration
# This value is formatted in the form: [gcp-project-id]:[region]:[instance-name]
spring.cloud.gcp.sql.instance-connection-name=mtech-merch-epc-poc-317014:us-east4:corpepc-mirakl-poc-east4
spring.cloud.gcp.sql.database-name=mirakl
# So app starts despite "table already exists" errors.
spring.datasource.continue-on-error=true
# Enforces database initialization
spring.datasource.initialization-mode=always
spring.datasource.username=mirakl_user
spring.datasource.password=${sm://corpepc-mirakl-poc-east4-mysql/1}
## Local MySQL configuration
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url=jdbc:mysql://localhost:3306/mirakldb
#spring.datasource.username=root
#spring.datasource.password=

spring.cloud.gcp.secretmanager.enabled=true

## Below GCP bucket resides in Orchestraion Layer (OL) 
com.macys.mirakl.orch.bucket.delta=mtech-merch-epc-poc-317014-mirakl_delta

## Below GCP bucket resides in Integration Layer (IL)
com.macys.mirakl.orch.bucket.images.delta=mtech-merch-epc-poc-317014-mirakl_response
#com.macys.mirakl.orch.bucket.images.delta=mtech-ecom-trans-etl-np_marketplace-product-macys-response-dev

############### Logging configuration ###############

logging.level.root=INFO
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} [%t] [%X{X-Correlation-Id}] [%X{FileName}] %-5level %logger{36}     : %msg%n
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} [%t] [%X{X-Correlation-Id}] [%X{FileName}] %-5level %logger{36}     : %msg%n
logging.file.name=/appl/logs/mp-mirakl-orch/mp-mirakl-orch.log
logging.max-history=60
logging.file.max-size=100MB

############### Actuator configuration ###############
management.security.enabled = false
management.endpoints.web.exposure.include=health,info
# For local machine avoiding spring.cloud.gcp.sql.instance-connection-name DB connectivity check
management.health.db.enabled=false

# Milliseconds to wait for response from Pub/Sub before timing out
spring.cloud.gcp.pubsub.health.timeout-millis=10000

# Image update response handling Cron job props
image.update.response.cron.job.schedule=0 0/5 * * * *
image.update.response.cron.job.enable =yes

# Duplicate notification handling Cleanup Job properties
notification.cleanup.cron.job.enabled=yes
notification.cleanup.cron.job.schedule=0 0/15 * * * *
notification.cleanup.minutes=60

# for offer old version ,value should be offer
offer.file.version = offer_v2